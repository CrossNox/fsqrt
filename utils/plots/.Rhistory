# CHEQUEO EXITOSO, SE PROCEDE A BORRAR TODAS LAS COLUMNAS CON TIMESTAMP DEL DATAFRAME
# CON EXCEPCION DE LA PRIMERA
MyScada <- MyScada[,-seq(3,32,by=2)]
# EL HEADER DEL ARCHIVO TIENE DOS LINEAS DE TEXTO, LA SEGUNDA PARECE IDENTIFICAR DISTINTAS
# POSICIONES DENTRO DE LA ESTACION, HAGO UN ARCHIVO APARTE POR LAS DUDAS CON ESAS DOS
# LINEAS (QUEDA COMENTADO) Y BORRO LA SEGUNDA PARA SEGUIR CON EL PROCESAMIENTO
#write.csv(MyScada[1,], file=paste("Exportacion_YTEC_agua_",MyStation,"_Header.csv", sep=""), row.names=FALSE)
MyScada <- MyScada[2:21952,]
# LOS VOLUMENES EN AC SON TODOS NA, LOS SACO
MyScada <- MyScada[,-c(11,12)]
# DEFINO EL RANGO DE COLUMNAS CON VARIABLES CONTINUAS
MyAtt.Cont <- seq(2,17,by=1)
MyStation <- "AC"
MyScada <- read.table("Exportacion_YTEC_agua_AC.csv", sep=",", header=T)
#str(MyScada)
colnames(MyScada)[1] <- "Timestamp"
# CHEQUEO EXITOSO, SE PROCEDE A BORRAR TODAS LAS COLUMNAS CON TIMESTAMP DEL DATAFRAME
# CON EXCEPCION DE LA PRIMERA
MyScada <- MyScada[,-seq(3,32,by=2)]
MyAtt.Cont <- seq(2,17,by=1)
MyScada$Timestamp <- gsub("Abr", "Apr",MyScada$Timestamp)
MyScada$Timestamp <- gsub("Ago", "Aug",MyScada$Timestamp)
MyScada$Timestamp <- gsub("Dic", "Dec",MyScada$Timestamp)
MyScada$Timestamp <- gsub("Ene", "Jan",MyScada$Timestamp)
MyScada$Timestamp <- dmy_hms(MyScada$Timestamp)
MyScada$Fecha <- as.Date(MyScada$Timestamp)
for(i in MyAtt.Cont) {
MyScada[,i] <- as.double(MyScada[,i])
}
colnames(MyScada) <- c("Timestamp",
"Presion.AAR","Presion.AAB",
"Densidad.1","Densidad.2",
"RPM1","RPM2","RPM3",
"Corriente.1","Corriente.2",
"Agua",
"Temperatura.M1","Temperatura.M2",
"Caudal.M1","Caudal.M2",
"Volumen.M1","Volumen.M2",
"Fecha")
plot(MyScada$Temperatura.M1,type="l")
MyScada$Temperatura.M1[which(MyScada$Caudal.M1==0)] <- 0
MyScada$Temperatura.M2[which(MyScada$Caudal.M2==0)] <- 0
write.csv(MyScada, file=paste("Scada_", MyStation,".csv", sep=""), row.names=FALSE)
scadaAC <- read.csv("Desktop/Datos_Scada/Datos_Scada/Scada_AC.csv",skip=1)
setwd("/home/joaquintz/")
scadaAC <- read.csv("Desktop/Datos_Scada/Datos_Scada/Scada_AC.csv",skip=1)
scadaDiarioAC<-agregarScada(scadaAC,"scadaDiarioAC.csv")
scadaAC$Timestamp
MyScada$Timestamp
as.Date(MyScada$Timestamp)
setwd("/home/joaquintz/Desktop/Datos_Scada/Datos_Scada/");
write.csv(MyScada, file=paste("Scada_", MyStation,".csv", sep=""), row.names=FALSE)
plot(MyScada$Temperatura.M2)
setwd("/home/joaquintz/")
scadaAC <- read.csv("Desktop/Datos_Scada/Datos_Scada/Scada_AC.csv",skip=1)
scadaAC <- read.csv("Desktop/Datos_Scada/Datos_Scada/Scada_AC.csv")
scadaDiarioAC<-agregarScada(scadaAC,"scadaDiarioAC.csv")
plot(as.POSIXct(scadaAC$Timestamp),scadaAC$Temperatura.M1,type="l")
plot(as.POSIXct(scadaCD$Timestamp),scadaCD$Temperatura.M1,type="l")
plot(as.POSIXct(scadaAC$Timestamp),scadaAC$Temperatura.M1,type="l")
plot(as.POSIXct(scadaCD$Timestamp),scadaCD$Temperatura.M1,type="l")
plot(as.POSIXct(scadaAC$Timestamp),scadaAC$Temperatura.M1,type="l")
library("PerformanceAnalytics")
chart.Scatter(scadaAC)
chart.Correlation(scadaAC)
table.Correlation(scadaAC)
head(scadaAC)
head(scadaDiarioAC)
View(scadaDiarioAC)
plot(scadaDiario$Densidad.1)
plot(scadaDiarioAC$Densidad.1)
is.nan
plot(scadaDiarioAC$Presion.AAR)
plot(scadaDiarioAC$Presion.AAR,type="l")
plot(scadaDiarioAC$Presion.AAB,type="l")
plot(scadaDiarioAC$Presion.AAR,type="l")
library("ggplot")
library("ggplot2")
ac.presiones <- ggplot(data=scadaDiarioAC,aes(x=dia))+geom_line(aes(y=Presion.AAR),colour="#0084e8")
print(ac.presiones)
ac.presiones <- ggplot(data=scadaDiarioAC,aes(x=dia))+geom_line(aes(y=Presion.AAR),colour="#0084e8")+geom_smooth()
ac.presiones <- ggplot(data=scadaDiarioAC,aes(x=dia))+geom_line(aes(y=Presion.AAR),colour="#0084e8")+geom_smooth(aes(y=Presion.AAR))
ac.presiones <- ggplot(data=scadaDiarioAC,aes(x=dia))+geom_line(aes(y=Presion.AAR),colour="#0084e8")+geom_smooth()#aes(y=Presion.AAR))
print(ac.presiones)
ac.presiones <- ggplot(data=scadaDiarioAC,aes(x=dia))+geom_line(aes(y=Presion.AAR),colour="#0084e8")+geom_smooth(aes(y=Presion.AAR))
print(ac.presiones)
ac.presiones <- (ggplot(data=scadaDiarioAC,aes(x=dia))
+ geom_line(aes(y=Presion.AAR),colour="#0084e8")+geom_smooth(aes(y=Presion.AAR))
+ geom_line(aes(y=Presion.AAB),colour="#ff80c0")+geom_smooth(aes(y=Presion.AAB),colour="#ff80c0"))
print(ac.presiones)
ac.presiones <- (ggplot(data=scadaDiarioAC,aes(x=dia))
+ geom_line(aes(y=Presion.AAR),colour="#0084e8")+geom_smooth(aes(y=Presion.AAR))
+ geom_line(aes(y=Presion.AAB),colour="#008040")+geom_smooth(aes(y=Presion.AAB),colour="#008040"))
print(ac.presiones)
as.numeric(is.na(scadaDiarioAC$Presion.AAR))
?apply
scadaDiarioAC.nas <- apply(scadaDiarioAC,2,FUN=function(x) as.numeric(is.na(x)))
colSums(scadaDiarioAC.nas)
table(colSums(scadaDiarioAC.nas))
nasPorColumna<-function(df) colSums(apply(df,2,FUN=function(x)as.numeric(is.na(x))))
scadaDiarioAC$Densidad.1[1:20]
is.na(scadaDiarioAC$Densidad.1[1:20])
nasPorColumna(scadaDiarioPH)
scadaDiarioPH
scadaPH <- read.csv("Desktop/Datos_Scada/Datos_Scada/Scada_PH.csv",skip=1)
names(scadaPH)<-c("Timestamp","Presion.AAB","Densidad","Corriente.1","Corriente.2","Corriente.3","Corriente.4","Temperatura.M1","Temperatura.M2","Caudal.M1","Caudal.M2","Fecha")
scadaDiarioPH<-agregarScada(scadaPH,"scadaDiarioPH.csv")
####AGUAS DEL CARRIZO#####
scadaAC <- read.csv("Desktop/Datos_Scada/Datos_Scada/Scada_AC.csv")
scadaDiarioAC<-agregarScada(scadaAC,"scadaDiarioAC.csv")
####CERRO DIVISADERO EN EL ESPACIO DE FOURIER####
####the fourier transform is a base change to a system such that the numerical representation of the number has the most fours####
scadaCD <- read.csv("Desktop/Datos_Scada/Datos_Scada/Scada_CD.csv",skip=1)
names(scadaCD)<-c("Timestamp","Presion.AAR","Presion.AAB","Densidad.1","Viscosidad","Agua","Temperatura.M1","Temperatura.M2","Caudal.M1","Caudal.M2","Fecha")
scadaDiarioCD<-agregarScada(scadaCD,"scadaDiarioCD.csv")
####SOS- -NE- A-DO####
scadaES <- read.csv("Desktop/Datos_Scada/Datos_Scada/Scada_ES.csv",skip=1)
names(scadaES)<-c("Timestamp","Presion.AAR","Presion.AAB","Densidad.1","RPM.1","RPM.2","RPM.3","Corriente.1","Corriente.2","Agua","Temperatura.M1","Temperatura.M2","Temperatura.M3","Caudal.M1","Caudal.M2","Caudal.M3","Fecha")
scadaDiarioES<-agregarScada(scadaES,"scadaDiarioES.csv")
####VB QUE SERA, NO, ESTAS ESTACIONES QUE APARECEN####
scadaVB <- read.csv("Desktop/Datos_Scada/Datos_Scada/Scada_VB.csv")
scadaDiarioVB <- agregarScada(scadaVB)
####MALARGÜE, QUE AMBIGÜO Y ANTIGÜO####
scadaMG <- read.csv("Desktop/Datos_Scada/Datos_Scada/Scada_MG.csv",skip=1)
names(scadaMG)<-c("Timestamp","Presion.AAB","Densidad.1","Densidad.2","Agua","Temperatura.M1","Temperatura.M2","Caudal.M1","Caudal.M2","Fecha")
scadaDiarioMG<-agregarScada(scadaMG,"scadaDiarioMG.csv")
scadaDiarioVB <- agregarScada(scadaVB,"scadaDiarioUG.csv")
nasPorColumna(scadaDiarioPH)
nasPorColumna(scadaDiarioAC)
nasPorColumna(scadaDiarioCD)
nasPorColumna(scadaDiarioMG)
nasPorColumna(scadaDiarioVB)
nasPorColumna(scadaDiarioES)
nasPorColumna(scadaDiarioUG)
scadaUG <- read.csv("Desktop/Datos_Scada/Datos_Scada/Scada_UG.csv",skip=1)
names(scadaUG)<-c("Timestamp","Presion.AAR","Agua","Temperatura.M2","Temperatura.M3","Caudal.M1","Caudal.M2","Fecha")
scadaDiarioUG <- agregarScada(scadaUG,"scadaDiarioUG.csv")
nasPorColumna(scadaDiarioUG)
barplot(nasPorColumna(scadaDiarioVB))
nasPorColumna(scadaDiarioUG)
nasPorColumna(scadaDiarioVB)
#sumar temperaturas, el escalon ya esta hecho
names(scadaDiarioAC)
ac.presiones <- (ggplot(data=scadaDiarioAC,aes(x=dia))
+ geom_line(aes(y=Temperatura.M1),colour="#0084e8")+geom_smooth(aes(y=Temperatura.M1))
+ geom_line(aes(y=Temperatura.M2),colour="#008040")+geom_smooth(aes(y=Temperatura.M2),colour="#008040"))
print(ac.presiones)
ac.temps <- (ggplot(data=scadaDiarioAC,aes(x=dia))
+ geom_point(aes(y=Temperatura.M1),colour="#0084e8")+geom_smooth(aes(y=Temperatura.M1))
+ geom_point(aes(y=Temperatura.M2),colour="#008040")+geom_smooth(aes(y=Temperatura.M2),colour="#008040"))
print(ac.temps)
ph.temps <- (ggplot(data=scadaDiarioPH,aes(x=dia))
+ geom_point(aes(y=Temperatura.M1),colour="#0084e8")+geom_smooth(aes(y=Temperatura.M1))
+ geom_point(aes(y=Temperatura.M2),colour="#008040")+geom_smooth(aes(y=Temperatura.M2),colour="#008040"))
print(ph.temps)
temperaturas <- function(df) print(ggplot(data=df,aes(x=dia))
+ geom_point(aes(y=Temperatura.M1),colour="#0084e8")+geom_smooth(aes(y=Temperatura.M1))
+ geom_point(aes(y=Temperatura.M2),colour="#008040")+geom_smooth(aes(y=Temperatura.M2),colour="#008040"))
temperaturas(scadaDiarioPH)
temperaturas(scadaDiarioAC)
temperaturas(scadaDiarioCD)
temperaturas <- function(df,est) print(ggplot(data=df,aes(x=dia))
+ geom_point(aes(y=Temperatura.M1),colour="#0084e8")+geom_smooth(aes(y=Temperatura.M1))
+ geom_point(aes(y=Temperatura.M2),colour="#008040")+geom_smooth(aes(y=Temperatura.M2),colour="#008040")
+ ggtitle(paste("Temperaturas (Scada) en estacion",est)))
temperaturas(scadaDiarioPH,"PH")
temperaturas(scadaDiarioAC,"AC")
temperaturas(scadaDiarioCD,"CD")
temperaturas(scadaDiarioES,"ES")
temperaturas <- function(df,est) {
df$Temperatura.M1[which(df$Temperatura.M1==0)]<-NA
df$Temperatura.M2[which(df$Temperatura.M2==0)]<-NA
print(ggplot(data=df,aes(x=dia))
+ geom_point(aes(y=Temperatura.M1),colour="#0084e8")+geom_smooth(aes(y=Temperatura.M1))
+ geom_point(aes(y=Temperatura.M2),colour="#008040")+geom_smooth(aes(y=Temperatura.M2),colour="#008040")
+ ggtitle(paste("Temperaturas (Scada) en estacion",est)))
}
temperaturas(scadaDiarioES,"ES")
temperaturas(scadaDiarioCD,"CD")
temperaturas(scadaDiarioPH,"PH")
temperaturas(scadaDiarioAC,"AC")
temperaturas(scadaDiarioCD,"CD")
temperaturas(scadaDiarioES,"ES")
names(scadaDiarioES)
caudales <- function(df,est) {
df$Caudal.M1[which(df$Caudal.M1==0)]<-NA
df$Caudal.M2[which(df$Caudal.M2==0)]<-NA
print(ggplot(data=df,aes(x=dia))
+ geom_point(aes(y=Caudal.M1),colour="#0084e8")+geom_smooth(aes(y=Caudal.M1))
+ geom_point(aes(y=Caudal.M2),colour="#008040")+geom_smooth(aes(y=Caudal.M2),colour="#008040")
+ ggtitle(paste("Caudales (Scada) en estacion",est)))
}
caudales(scadaDiarioES,"ES")
plot(scadaDiarioPH$Temperatura.M1+scadaDiarioPH$Temperatura.M2)
plot(scadaDiarioAC$Temperatura.M1+scadaDiarioAC$Temperatura.M2)
plot(scadaDiarioPH$Temperatura.M1+scadaDiarioPH$Temperatura.M2)
plot(scadaDiarioAC$Temperatura.M1*scadaDiarioAC$Caudal.M1+scadaDiarioAC$Temperatura.M2*scadaDiarioAC$Caudal.M2)
mat = matrix(sample(1:100, 18, replace = TRUE), 3, 6)
rownames(mat) = letters[1:3]
colnames(mat) = LETTERS[1:6]
### basic settings
par(mfrow = c(3, 2))
par(mar = c(1, 1, 1, 1))
chordDiagram(mat)
2011-1995
library("ggplot2")
library("ggplot2")
comparison <- read.table("/home/joaquintz/Desktop/projects/utils/utils/benchmark.tsv",sep="\t",header=TRUE)
comparison$err_rel <- (comparison$fsqrt-comparison$sqrt)/comparison$sqrt
comparison.plot <- ggplot(data=comparison,aes(x=x,y=err_rel))+geom_line()+scale_x_log10()
print(comparison.plot)
comparison <- read.table("/home/joaquintz/Desktop/projects/utils/utils/benchmark.tsv",sep="\t",header=TRUE)
comparison$err_rel <- (comparison$fsqrt-comparison$sqrt)/comparison$sqrt
comparison.plot <- ggplot(data=comparison,aes(x=x,y=err_rel))+geom_line()+scale_x_log10()
print(comparison.plot)
comparison.plot <- comparison.plot + theme_bw() + ggtitle("Error relativo: sqrt vs fsqrt") +
ylab("Error relativo (%)") + xlab("x [log 10]")
print(comparison.plot)
uname
comparison <- read.table("/home/joaquintz/Desktop/projects/utils/utils/benchmark.tsv",sep="\t",header=TRUE)
comparison$err_rel <- (comparison$fsqrt-comparison$sqrt)/comparison$sqrt
comparison.plot <- ggplot(data=comparison,aes(x=x,y=err_rel))+geom_line()+scale_x_log10()
comparison.plot <- comparison.plot + theme_bw() + ggtitle("Error relativo: sqrt vs fsqrt") +
ylab("Error relativo (%)") + xlab("x [log 10]")
print(comparison.plot)
summary(comparison)
comparison <- read.table("/home/joaquintz/Desktop/projects/utils/utils/benchmark.tsv",sep="\t",header=TRUE)
comparison$err_rel <- (comparison$fsqrt-comparison$sqrt)/comparison$sqrt
comparison.plot <- ggplot(data=comparison,aes(x=x,y=err_rel))+geom_line()+scale_x_log10()
comparison.plot <- comparison.plot + theme_bw() + ggtitle("Error relativo: sqrt vs fsqrt") +
ylab("Error relativo (%)") + xlab("x [log 10]")
print(comparison.plot)
ggsave("comparison_sqrtvsfsqrt.png")
comparison <- read.table("/home/joaquintz/Desktop/projects/utils/utils/benchmark.tsv",sep="\t",header=TRUE)
comparison$err_rel <- (comparison$fsqrt-comparison$sqrt)/comparison$sqrt
comparison.plot <- ggplot(data=comparison,aes(x=x,y=err_rel))+geom_line()+scale_x_log10()
comparison.plot <- comparison.plot + theme_bw() + ggtitle("Error relativo: sqrt vs fsqrt") +
ylab("Error relativo (%)") + xlab("x [log 10]")
print(comparison.plot)
ggsave("comparison_sqrtvsfsqrt_sinmagia.png")
comparison <- read.table("/home/joaquintz/Desktop/projects/utils/utils/benchmark.tsv",sep="\t",header=TRUE)
comparison$err_rel <- (comparison$fsqrt-comparison$sqrt)/comparison$sqrt
comparison.plot <- ggplot(data=comparison,aes(x=x,y=err_rel))+geom_line()+scale_x_log10()
comparison.plot <- comparison.plot + theme_bw() + ggtitle("Error relativo: sqrt vs fsqrt") +
ylab("Error relativo (%)") + xlab("x [log 10]")
print(comparison.plot)
comparison <- read.table("/home/joaquintz/Desktop/projects/utils/utils/benchmark.tsv",sep="\t",header=TRUE)
comparison$err_rel <- (comparison$fsqrt-comparison$sqrt)/comparison$sqrt
head(comparison)
comparison <- read.table("/home/joaquintz/Desktop/projects/utils/utils/benchmark.tsv",sep="\t",header=TRUE)
comparison$err_rel <- (comparison$fsqrt-comparison$sqrt)/comparison$sqrt
comparison.plot <- ggplot(data=comparison,aes(x=x,y=err_rel))+geom_line()+scale_x_log10()
comparison.plot <- comparison.plot + theme_bw() + ggtitle("Error relativo: sqrt vs fsqrt [sin N-R]") +
ylab("Error relativo (%)") + xlab("x [log 10]")
print(comparison.plot)
comparison <- read.table("/home/joaquintz/Desktop/projects/utils/utils/benchmark.tsv",sep="\t",header=TRUE)
comparison$err_rel <- (comparison$fsqrt-comparison$sqrt)/comparison$sqrt
comparison.plot <- ggplot(data=comparison,aes(x=x,y=err_rel))+geom_line()+scale_x_log10()
comparison.plot <- comparison.plot + theme_bw() + ggtitle("Error relativo: sqrt vs fsqrt [sin N-R]") +
ylab("Error relativo (%)") + xlab("x [log 10]")
print(comparison.plot)
ggsave("comparison_sqrtvsfsqrt_sinNR.png")
comparison$x[which(comparison$err_rel>0.055)]
plot(comparison$x[which(comparison$err_rel>0.055)])
plot(comparison$err_rel[which(comparison$err_rel>0.055)])
plot(comparison$x[which(comparison$err_rel>0.059)])
comparison$x[which(comparison$err_rel>0.059)]
View(comparison$x[which(comparison$err_rel>0.059)])
View(matrix(comparison$x[which(comparison$err_rel>0.059)],ncol=1))
library("ggplot2")
comparison <- read.table("/home/joaquintz/Desktop/projects/utils/utils/benchmark.tsv",sep="\t",header=TRUE)
comparison$err_rel <- (comparison$fsqrt-comparison$sqrt)/comparison$sqrt
comparison.plot <- ggplot(data=comparison,aes(x=x,y=err_rel))+geom_line()+scale_x_log10()
comparison.plot <- comparison.plot + theme_bw() + ggtitle("Error relativo: sqrt vs fsqrt [sin N-R]") +
ylab("Error relativo (%)") + xlab("x [log 10]")
print(comparison.plot)
max(comparison$err_rel)
comparison$err_rel
?max
max(comparison$err_rel,na.rm=TRUE)
upper_limit <- max(comparison$err_rel,na.rm=TRUE)
lower_limit <- min(comparison$err_rel,na.rm=TRUE)
lower_limit
print(comparison.plot+scale_y_continuous(limits=c(lower_limit,upper_limit)),breaks=seq(0,upper_limit,by=0.01))
comparison.plot <- comparison.plot+scale_y_continuous(limits=c(lower_limit,upper_limit)),breaks=seq(0,upper_limit,by=0.01)
comparison.plot <- comparison.plot+scale_y_continuous(limits=c(lower_limit,upper_limit),breaks=seq(0,upper_limit,by=0.01))
print(comparison.plot)
comparison.plot <- (ggplot(data=comparison,aes(x=x,y=err_rel))
+geom_line()
+scale_x_log10()
+ scale_y_continuous(limits=c(min_error,max_error),breaks=seq(0,max_error,by=0.01))
+ theme_bw()
+ ggtitle("Error relativo: sqrt vs fsqrt [sin N-R]")
+ylab("Error relativo (%)") + xlab("x [log 10]"))
print(comparison.plot)
max_error <- max(comparison$err_rel,na.rm=TRUE)
min_error <- min(comparison$err_rel,na.rm=TRUE)
comparison.plot <- (ggplot(data=comparison,aes(x=x,y=err_rel))
+geom_line()
+scale_x_log10()
+ scale_y_continuous(limits=c(min_error,max_error),breaks=seq(0,max_error,by=0.01))
+ theme_bw()
+ ggtitle("Error relativo: sqrt vs fsqrt [sin N-R]")
+ylab("Error relativo (%)") + xlab("x [log 10]"))
print(comparison.plot)
print(comparison.plot+scale_x_continuous(breaks=seq(0,10)))
print(comparison.plot+scale_x_log10(breaks=seq(0,10)))
10^seq(1,10)
print(comparison.plot+scale_x_log10(breaks=1^seq(0,8)))
1^seq(0,8)
print(comparison.plot+scale_x_log10(breaks=10^seq(0,8)))
expression("title"[2])
expression("title"[2])+expression("title"[2])
as.expression(parse(text=(letters,"~","abc",sep="")))
letters
as.expression(parse(text=paste(letters,"~","abc",sep="")))
as.expression(parse(text=("10~",seq(0,8),sep="")))
as.expression(parse(text=paste("10~",seq(0,8),sep="")))
print(comparison.plot+scale_x_log10(breaks=10^seq(0,8)),labels=as.expression(parse(text=paste("10~",seq(0,8),sep=""))))
comparison.plot+scale_x_log10(breaks=10^seq(0,8)),labels=as.expression(parse(text=paste("10~",seq(0,8),sep="")))
comparison.plot <- comparison.plot + comparison.plot+scale_x_log10(breaks=10^seq(0,8)),labels=as.expression(parse(text=paste("10~",seq(0,8),sep="")))
comparison.plot <- comparison.plot+
scale_x_log10(breaks=10^seq(0,8)),labels=as.expression(parse(text=paste("10~",seq(0,8),sep="")))
comparison.plot <- comparison.plot+
scale_x_log10(breaks=10^seq(0,8),labels=as.expression(parse(text=paste("10~",seq(0,8),sep="")))
print(comparison.plot)
comparison.plot
as.expression(parse(text=paste("10~",seq(0,8),sep=""))
comparison.plot <- comparison.plot+
scale_x_log10(breaks=10^seq(0,8),labels=as.expression(parse(text=paste("10~",seq(0,8),sep=""))))
print(comparison.plot)
comparison.plot <- comparison.plot+
scale_x_log10(breaks=10^seq(0,8),labels=as.expression(parse(text=paste("10^",seq(0,8),sep=""))))
print(comparison.plot)
max(log10(comparison$err_rel),na.rm=TRUE)
min(log10(comparison$err_rel),na.rm=TRUE)
max(log10(comparison$err_rel),na.rm=TRUE)
max(log10(comparison$x),na.rm=TRUE)
max_x_exp <- ceiling(max(log10(comparison$x),na.rm=TRUE))
library("ggplot2")
setwd("/home/joaquintz/Desktop/projects/utils/utils/")
comparison <- read.table("benchmark.tsv",sep="\t",header=TRUE)
comparison$err_rel <- (comparison$fsqrt-comparison$sqrt)/comparison$sqrt
max_error <- max(comparison$err_rel,na.rm=TRUE)
min_error <- min(comparison$err_rel,na.rm=TRUE)
max_x_exp <- ceiling(max(log10(comparison$x),na.rm=TRUE))
comparison.plot <- (ggplot(data=comparison,aes(x=x,y=err_rel))
+geom_line()
+scale_x_log10()
+ scale_y_continuous(limits=c(min_error,max_error),breaks=seq(0,max_error,by=0.01))
+ theme_bw()
+ ggtitle("Error relativo: sqrt vs fsqrt [sin N-R]")
+ylab("Error relativo (%)") + xlab("x [log 10]"))
comparison.plot <- comparison.plot+
scale_x_log10(breaks=10^seq(0,max_x_exp),labels=as.expression(parse(text=paste("10^",seq(0,max_x_exp),sep=""))))
print(comparison.plot)
library("ggplot2")
setwd("/home/joaquintz/Desktop/projects/utils/utils/plots/")
ggsave("comparison_sinN_R.png")
setwd("/home/joaquintz/Desktop/projects/utils/utils/plots/")
comparison <- read.table("benchmark.tsv",sep="\t",header=TRUE)
comparison$err_rel <- (comparison$fsqrt-comparison$sqrt)/comparison$sqrt
max_error <- max(comparison$err_rel,na.rm=TRUE)
min_error <- min(comparison$err_rel,na.rm=TRUE)
max_x_exp <- ceiling(max(log10(comparison$x),na.rm=TRUE))
comparison.plot <- (ggplot(data=comparison,aes(x=x,y=err_rel))
+geom_line()
+scale_x_log10()
+ scale_y_continuous(limits=c(min_error,max_error),breaks=seq(0,max_error,by=0.01))
+ theme_bw()
+ ggtitle("Error relativo: sqrt vs fsqrt")
+ylab("Error relativo (%)") + xlab("x [log 10]"))
comparison.plot <- comparison.plot+
scale_x_log10(breaks=10^seq(0,max_x_exp),labels=as.expression(parse(text=paste("10^",seq(0,max_x_exp),sep=""))))
print(comparison.plot)
max_error <- max(comparison$err_rel,na.rm=TRUE)
max_error
1e-07
step_error <- 1e-07
comparison.plot <- (ggplot(data=comparison,aes(x=x,y=err_rel))
+geom_line()
+scale_x_log10()
+ scale_y_continuous(limits=c(min_error,max_error),breaks=seq(0,max_error,by=step_error))
+ theme_bw()
+ ggtitle("Error relativo: sqrt vs fsqrt")
+ylab("Error relativo (%)") + xlab("x [log 10]"))
comparison.plot <- comparison.plot+
scale_x_log10(breaks=10^seq(0,max_x_exp),labels=as.expression(parse(text=paste("10^",seq(0,max_x_exp),sep=""))))
print(comparison.plot)
library("ggplot2")
setwd("/home/joaquintz/Desktop/projects/utils/utils/plots/")
comparison <- read.table("benchmark.tsv",sep="\t",header=TRUE)
comparison$err_rel <- (comparison$fsqrt-comparison$sqrt)/comparison$sqrt
max_error <- max(comparison$err_rel,na.rm=TRUE)
min_error <- min(comparison$err_rel,na.rm=TRUE)
step_error <- 1e-07
max_x_exp <- ceiling(max(log10(comparison$x),na.rm=TRUE))
comparison.plot <- (ggplot(data=comparison,aes(x=x,y=err_rel))
+geom_line()
+scale_x_log10()
+ scale_y_continuous(limits=c(min_error,max_error),breaks=seq(0,max_error,by=step_error))
+ scale_x_log10(breaks=10^seq(0,max_x_exp),labels=as.expression(parse(text=paste("10^",seq(0,max_x_exp),sep="")))
+ theme_bw()
+ ggtitle("Error relativo: sqrt vs fsqrt")
+ylab("Error relativo (%)") + xlab("x [log 10]")))
comparison.plot <- (ggplot(data=comparison,aes(x=x,y=err_rel))
+geom_line()
+scale_x_log10()
+ scale_y_continuous(limits=c(min_error,max_error),
breaks=seq(0,max_error,by=step_error))
+ scale_x_log10(breaks=10^seq(0,max_x_exp),
labels=as.expression(parse(text=paste("10^",seq(0,max_x_exp),sep=""))))
+ theme_bw()
+ ggtitle("Error relativo: sqrt vs fsqrt")
+ylab("Error relativo (%)") + xlab("x [log 10]"))
comparison.plot <- (ggplot(data=comparison,aes(x=x,y=err_rel))
+ geom_line()
+ scale_y_continuous(limits=c(min_error,max_error),
breaks=seq(0,max_error,by=step_error))
+ scale_x_log10(breaks=10^seq(0,max_x_exp),
labels=as.expression(parse(text=paste("10^",seq(0,max_x_exp),sep=""))))
+ theme_bw()
+ ggtitle("Error relativo: sqrt vs fsqrt")
+ ylab("Error relativo (%)") + xlab("x [log 10]"))
print(comparison.plot)
exp
pot
NULL
paste(NULL,"hola","man")
paste(NULL,"hola","man",sep="")
exponent_breaks <- function(coeficientes,pot)
as.expression(parse(text=paste(coeficientes,"10^",pot,sep="")))
min_error
seq(min_error,max_error,by=step_error)
comparison.plot <- (ggplot(data=comparison,aes(x=x,y=err_rel))
+ geom_line()
+ scale_y_continuous(limits=c(min_error,max_error),
breaks=exponent_breaks(seq(min_error,max_error,by=step_error)))
+ scale_x_log10(breaks=10^seq(0,max_x_exp),
labels=exponent_breaks(NULL,seq(0,max_x_exp)))
+ theme_bw()
+ ggtitle("Error relativo: sqrt vs fsqrt")
+ ylab("Error relativo (%)") + xlab("x [log 10]"))
print(comparison.plot)
comparison.plot <- (ggplot(data=comparison,aes(x=x,y=err_rel))
+ geom_line()
+ scale_y_continuous(limits=c(min_error,max_error),
breaks=exponent_breaks(seq(min_error,max_error,by=step_error),7))
+ scale_x_log10(breaks=10^seq(0,max_x_exp),
labels=exponent_breaks(NULL,seq(0,max_x_exp)))
+ theme_bw()
+ ggtitle("Error relativo: sqrt vs fsqrt")
+ ylab("Error relativo (%)") + xlab("x [log 10]"))
print(comparison.plot)
print(comparison.plot)
comparison.plot <- (ggplot(data=comparison,aes(x=x,y=err_rel))
+ geom_line()
+ scale_y_continuous(limits=c(min_error,max_error),
breaks=seq(min_error,max_error,by=step_error),
labels=exponent_breaks(seq(min_error,max_error,by=step_error),7))
+ scale_x_log10(breaks=10^seq(0,max_x_exp),
labels=exponent_breaks(NULL,seq(0,max_x_exp)))
+ theme_bw()
+ ggtitle("Error relativo: sqrt vs fsqrt")
+ ylab("Error relativo (%)") + xlab("x [log 10]"))
print(comparison.plot)
comparison.plot <- (ggplot(data=comparison,aes(x=x,y=err_rel))
+ geom_line()
+ scale_y_continuous(limits=c(min_error,max_error),
breaks=seq(min_error,max_error,by=step_error))
+ scale_x_log10(breaks=10^seq(0,max_x_exp),
labels=exponent_breaks(NULL,seq(0,max_x_exp)))
+ theme_bw()
+ ggtitle("Error relativo: sqrt vs fsqrt")
+ ylab("Error relativo (%)") + xlab("x [log 10]"))
print(comparison.plot)
seq(min_error,max_error,by=step_error)
options(digits=3)
print(comparison.plot)
step_error <- (max_error-min_error)/5
comparison.plot <- (ggplot(data=comparison,aes(x=x,y=err_rel))
+ geom_line()
+ scale_y_continuous(limits=c(min_error,max_error),
breaks=seq(min_error,max_error,by=step_error))
+ scale_x_log10(breaks=10^seq(0,max_x_exp),
labels=exponent_breaks(NULL,seq(0,max_x_exp)))
+ theme_bw()
+ ggtitle("Error relativo: sqrt vs fsqrt")
+ ylab("Error relativo (%)") + xlab("x [log 10]"))
print(comparison.plot)
ggsave("comparison.png")
library("ggplot2")
options(digits=3)
setwd("/home/joaquintz/Desktop/projects/utils/utils/plots/")
comparison <- read.table("benchmark.tsv",sep="\t",header=TRUE)
comparison$err_rel <- (comparison$fsqrt-comparison$sqrt)/comparison$sqrt
max_error <- max(comparison$err_rel,na.rm=TRUE)
min_error <- min(comparison$err_rel,na.rm=TRUE)
step_error <- (max_error-min_error)/5
max_x_exp <- ceiling(max(log10(comparison$x),na.rm=TRUE))
exponent_breaks <- function(coeficientes,pot)
as.expression(parse(text=paste(coeficientes,"10^",pot,sep="")))
comparison.plot <- (ggplot(data=comparison,aes(x=x,y=err_rel))
+ geom_line()
+ scale_y_continuous(limits=c(min_error,max_error),
breaks=seq(min_error,max_error,by=step_error))
+ scale_x_log10(breaks=10^seq(0,max_x_exp),
labels=exponent_breaks(NULL,seq(0,max_x_exp)))
+ theme_bw()
+ ggtitle("Error relativo: sqrt vs fsqrt")
+ ylab("Error relativo (%)") + xlab("x [log 10]"))
print(comparison.plot)
